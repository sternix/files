# /usr/local/etc/relayd.conf

timeout 1000

prefork 8
interval 5

www_example_com = "10.0.0.10"
svc_example_com = "10.0.0.11"
xyz_example_com = "10.0.0.12"
test_example_com = "10.0.0.13"

table <www_example_com_table> {
        10.0.0.16
        10.0.0.17
        10.0.0.18
        10.0.0.19
        10.0.0.20
        10.0.0.21
        10.0.0.22
        10.0.0.23
        10.0.0.24
        10.0.0.25
}


table <svc_servers> {
        10.0.0.16
        10.0.0.17
        10.0.0.18
        10.0.0.19
        10.0.0.20
        10.0.0.21
        10.0.0.22
        10.0.0.23
        10.0.0.24
        10.0.0.25
}


table <xyz_servers> {
	10.0.0.100
	10.0.0.101
	10.0.0.102
	10.0.0.103
}


table <test_servers> {
	10.0.0.200
	10.0.0.201
	10.0.0.202
	10.0.0.203
	10.0.0.204
}

http protocol exhttp {
        header append "$REMOTE_ADDR" to "CLIENT_IP"
        header append "$REMOTE_ADDR" to "X-Forwarded-For"
        header append "$SERVER_ADDR" to "X-Forwarded-By"
        header change "Connection" to "close"
        header change "Keep-Alive" to "30"

        tcp { nodelay , sack , socket buffer 65536 , backlog 65535 }
}

http protocol https_proto {
        header append "$REMOTE_ADDR" to "CLIENT_IP"
        header append "$SERVER_ADDR:$SERVER_PORT" to "X-Forwarded-By"
        header append "$REMOTE_ADDR" to "X-Forwarded-For"
        header change "Keep-Alive" to "$TIMEOUT"
       # header change "Connection" to "close"

        tcp { nodelay, sack, socket buffer 65536, backlog 65535 }

        ssl { no sslv2, sslv3, tlsv1, ciphers HIGH }
        ssl session cache disable
}

http protocol xyz_proto {
        header append "$REMOTE_ADDR" to "CLIENT_IP"
        header append "$SERVER_ADDR:$SERVER_PORT" to "X-Forwarded-By"
        header append "$REMOTE_ADDR" to "X-Forwarded-For"
        header change "Keep-Alive" to "$TIMEOUT"
        tcp { nodelay , sack , socket buffer 65536 , backlog 65535 }
}

relay www_example_com {
        listen on $www_example_com port 80
        protocol exhttp
        forward to <www_example_com_table> port 80 mode roundrobin check tcp
}

relay xyz_example_com {
        listen on $xyz_example_com port 80
        protocol xyz_proto
        forward to <xyz_servers> port 80 mode loadbalance check tcp
}

# https relays expected certificates like
# /usr/local/etc/ssl/10.0.0.11.crt
# /usr/local/etc/ssl/private/10.0.0.11.key
# crt file include all certificates from CA, like nginx

# this relay take https but forward to http
relay https_svc_example_com {
        listen on $svc_example_com_ip port 443 ssl
        protocol https_proto
        forward to <svc_servers> port 80 mode roundrobin check tcp
}

# this relay takes https and forward https
relay https_test_example_com {
        listen on $test_example_com port 443 ssl
        protocol https_proto
        forward with ssl to <test_servers> port 443 mode loadbalance check tcp
}
